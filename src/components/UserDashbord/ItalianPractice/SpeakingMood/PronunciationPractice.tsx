
import React, { useState } from 'react';
import { Volume2 } from 'lucide-react';
import MicButton from './MicButton';
import { Phrase } from './types';

interface PronunciationPracticeProps {
Â  phrase: Phrase;
Â  isRecording: boolean;
Â  recordingScore: number | null;
Â  onMicClick: () => void;
Â  onContinue: () => void;
Â  onTryAgain: () => void;
}

const PronunciationPractice: React.FC<PronunciationPracticeProps> = ({
Â  phrase,
Â  isRecording,
Â  recordingScore,
Â  onMicClick,
Â  onContinue,
Â  onTryAgain,
}) => {
Â  const [showPhonetic, setShowPhonetic] = useState(false);

  // ************************************************************
  // ** NEW: Text-to-Speech (TTS) Logic for Pronunciation Button **
  // ************************************************************
  const handleSpeak = () => {
    // 1. Check if the browser supports the Web Speech API
    if ('speechSynthesis' in window) {
      const utterance = new SpeechSynthesisUtterance(phrase.italian);
      
      // 2. Set the language code (e.g., 'it-IT' for Italian)
      // This ensures the correct accent and reading rules are used.
      utterance.lang = "it-IT"; 
      
      // 3. Stop any current speech and speak the new phrase
      window.speechSynthesis.cancel();
      window.speechSynthesis.speak(utterance);
    } else {
      // Fallback for unsupported browsers
      console.error("Text-to-Speech (TTS) is not supported by your browser.");
      alert("Audio playback is not supported in this browser.");
    }
  };
  // ************************************************************

Â  return (
Â  Â  <div className="rounded-lg">
Â  Â  Â  <div className="p-8">
Â  Â  Â  Â  <div className="text-center mb-6 bg-white py-8 rounded-2xl">
Â  Â  Â  Â  Â  <h2 className="text-4xl font-bold text-gray-900 mb-3">
Â  Â  Â  Â  Â  Â  "{phrase.italian}"
Â  Â  Â  Â  Â  </h2>
Â  Â  Â  Â  Â  <p className="text-gray-600 text-lg mb-4">{phrase.english}</p>
Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  onClick={() => setShowPhonetic(!showPhonetic)}
Â  Â  Â  Â  Â  Â  className="px-4 cursor-pointer py-2 text-sm text-gray-600 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors"
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  {showPhonetic ? 'Hide Phonetic' : 'Show Phonetic'}
Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  {showPhonetic && (
Â  Â  Â  Â  Â  Â  <p className="text-gray-500 text-sm mt-2">{phrase.phonetic}</p>
Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  </div>

        {/* ********************************************** */}
        {/* Updated Button to use handleSpeak */}
        {/* ********************************************** */}
Â  Â  Â  Â  <div className="flex justify-center mb-8">
Â  Â  Â  Â  Â  <button 
              onClick={handleSpeak}
              className="flex cursor-pointer items-center gap-2 px-6 py-3 bg-white border-2 border-gray-300 rounded-lg hover:bg-gray-50 transition-colors"
          >
Â  Â  Â  Â  Â  Â  <Volume2 size={20} className="text-gray-700" />
Â  Â  Â  Â  Â  Â  <span className="font-medium text-gray-900">Listen To Pronunciation</span>
Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  </div>
        {/* ********************************************** */}

Â  Â  Â  Â  <div className="text-center">
Â  Â  Â  Â  Â  <h3 className="text-xl font-semibold text-gray-900 mb-6">
Â  Â  Â  Â  Â  Â  Record Your Pronunciation
Â  Â  Â  Â  Â  </h3>
Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  <MicButton 
Â  Â  Â  Â  Â  Â  isRecording={isRecording} 
Â  Â  Â  Â  Â  Â  onClick={onMicClick} 
Â  Â  Â  Â  Â  Â  label="Click the microphone to record your pronunciation"
Â  Â  Â  Â  Â  />

Â  Â  Â  Â  Â  {recordingScore !== null && (
Â  Â  Â  Â  Â  Â  <div className="mb-8 p-6 bg-green-50 rounded-lg max-w-md mx-auto">
Â  Â  Â  Â  Â  Â  Â  <div className="text-4xl font-bold text-green-600 mb-2">{recordingScore}%</div>
Â  Â  Â  Â  Â  Â  Â  <div className="text-sm text-gray-600 mb-4">Accuracy Score</div>
Â  Â  Â  Â  Â  Â  Â  <div className="w-full bg-gray-200 rounded-full h-2 mb-2">
Â  Â  Â  Â  Â  Â  Â  Â  <div 
Â  Â  Â  Â  Â  Â  Â  Â  Â  className="bg-green-600 h-2 rounded-full" 
Â  Â  Â  Â  Â  Â  Â  Â  Â  style={{ width: `${recordingScore}%` }}
Â  Â  Â  Â  Â  Â  Â  Â  ></div>
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  <div className="text-sm text-gray-600">Excellent pronunciation!</div>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  )}

Â  Â  Â  Â  Â  <div className="flex justify-center gap-4">
Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  onClick={onTryAgain}
Â  Â  Â  Â  Â  Â  Â  className="flex cursor-pointer items-center gap-2 px-6 py-3 bg-white border-2 border-gray-300 rounded-lg font-medium text-gray-900 hover:bg-gray-50 transition-colors"
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  <span>ðŸ”„</span>
Â  Â  Â  Â  Â  Â  Â  Try Again
Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  onClick={onContinue}
Â  Â  Â  Â  Â  Â  Â  className="px-6 cursor-pointer py-3 bg-blue-600 rounded-lg font-medium text-white hover:bg-blue-700 transition-colors"
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Continue
Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>
Â  Â  Â  </div>
Â  Â  </div>
Â  );
};

export default PronunciationPractice;










 